name: "test"
on:  
 push:
   branches: [ main ]
jobs:
  test:
    runs-on: "windows-latest"
    steps:
    - name: "Checkout"
      uses: "actions/checkout@v3"
    - name: "Read data from JSON file .github/workflows/parameter.json"
      uses: actions/github-script@v6
      id: read-json
      with:                  
          script: |
            let keyObject = {tanentName:"activenation",enVariable:"PROD"};
            const { TENANT_ID, BE_ENV } = process.env 
            const fs = require('fs');            
            const data = fs.readFileSync('.github/workflows/parameter.json');            
            const deploymentConfig = JSON.parse(data);
            console.log(`Reading data for tenant =>`+keyObject.tanentName); 
            let  getCredentail = ({tanentName,enVariable}) => {
            let tenantConfigData = deploymentConfig[tanentName][enVariable];
            const LOCALYTICS_ID = tenantConfigData.localyticsId
            const FIRBASE_PROJECT_ID = tenantConfigData.firebaseProjectId
            const FIRBASE_SITE_ID = tenantConfigData.firebaseSiteId
            const FIRBASE_AUTH_KEY = tenantConfigData.firebaseAuthKey
            core.exportVariable('LOCALYTICS_ID', LOCALYTICS_ID)
            core.exportVariable('FIRBASE_PROJECT_ID', FIRBASE_PROJECT_ID)
            core.exportVariable('FIRBASE_SITE_ID', FIRBASE_SITE_ID)
            core.exportVariable('FIRBASE_AUTH_KEY', FIRBASE_AUTH_KEY)
            return tenantConfigData;
            };

            console.log(getCredentail(keyObject));
            let tenantObject = getTenantInformation();
            if (tenantObject && tenantObject.length > 0) {
              console.log('Found tenant name '+keyObject[tanentName]+' and env '+ keyObject[enVariable]);
              const LOCALYTICS_ID = tenantObject[LOCALYTICS_ID];
              core.exportVariable('LOCALYTICS_ID', LOCALYTICS_ID)
            } else {
              const message = 'The tenant not found for tenant => ' +keyObject[tanentName] ' + ' and environment => '+ keyObject[enVariable]
              core.setFailed(message);
            }            
                




        
